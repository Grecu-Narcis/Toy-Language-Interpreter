Id=1
ExeStack:
Ref(int) v1
int cnt
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
Ref(int) v1
int cnt
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
int cnt
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
v1 = (0, int)

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
int cnt
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
v1 = (0, int)

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 0
v1 = (0, int)

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
new(v1, 1)
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 0
v1 = (0, int)

Output:

File Table:

Heap Table:

Semaphore Table:

Id=1
ExeStack:
createSemaphore(cnt, ReadHeap(v1))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 0
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:

Id=1
ExeStack:
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=1
ExeStack:
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); print(ReadHeap(v1)); release(cnt))
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=1
ExeStack:
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=2
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=1
ExeStack:
Fork(acquire(cnt); WriteHeap(v1, ReadHeap(v1)*10); WriteHeap(v1, ReadHeap(v1)*2); print(ReadHeap(v1)); release(cnt))
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=2
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=2
ExeStack:
WriteHeap(v1, ReadHeap(v1)*10)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=2
ExeStack:
WriteHeap(v1, ReadHeap(v1)*10)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 1

Semaphore Table:
1 -> (1, [2])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=2
ExeStack:
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=2
ExeStack:
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=2
ExeStack:
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [2])

Id=1
ExeStack:
acquire(cnt)
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [])

Id=2
ExeStack:

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [])

Id=1
ExeStack:
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=1
ExeStack:
print(ReadHeap(v1)-1)
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=1
ExeStack:
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=3
ExeStack:
acquire(cnt)
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [1])

Id=1
ExeStack:

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
WriteHeap(v1, ReadHeap(v1)*10)
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 10

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 100

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
WriteHeap(v1, ReadHeap(v1)*2)
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 100

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 200

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
print(ReadHeap(v1))
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9

File Table:

Heap Table:
1 -> 200

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:
release(cnt)

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9
200

File Table:

Heap Table:
1 -> 200

Semaphore Table:
1 -> (1, [3])

Id=3
ExeStack:

SymTable:
cnt = 1
v1 = (1, int)

Output:
10
9
200

File Table:

Heap Table:
1 -> 200

Semaphore Table:
1 -> (1, [])

